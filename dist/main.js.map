{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA,MAAM;AACN,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN,8BAA8B,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpEA,kBAAkB,mBAAO,CAAC,uCAAa;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;;AAEA;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;ACrC8B;AACJ;;AAE1B;AACO,oBAAoB,gDAAM;AAC1B,oBAAoB,gDAAM;;AAEjC;AACA;AACA;;AAEA;AACA;AACA,IAAI,0BAA0B;AAC9B,IAAI,6BAA6B;AACjC,IAAI,4BAA4B;AAChC,IAAI,4BAA4B;AAChC,IAAI,8BAA8B;AAClC;;AAEA,0CAA0C,8CAAI;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,4CAA4C,UAAU;AACtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;AC5CA;AACA;AACA,kBAAkB,QAAQ;AAC1B,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;UCpDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNsB;AACoB;AACS;;AAEnD;AACA;AACA;;AAEA,sBAAsB,0CAAO,aAAa,0CAAO,GAAG,0CAAO;AAC3D,iBAAiB,0CAAO,aAAa,0CAAO,GAAG,0CAAO;AACtD,uBAAuB,0CAAO;AAC9B;AACA;;AAEA,iDAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,kDAAa","sources":["webpack://battleship/./src/styles.css","webpack://battleship/./src/Gameboard.js","webpack://battleship/./src/Player.js","webpack://battleship/./src/Ship.js","webpack://battleship/./src/game.js","webpack://battleship/./src/ui.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/compat get default export","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","class Gameboard {\n  constructor() {\n    this.ships = [];\n    this.missedShots = [];\n    this.board = Array.from({ length: 10 }, () => Array(10).fill(null));\n  }\n  placeShip(ship, x, y, orientation) {\n    ship.setPosition(x, y, orientation);\n\n    if (orientation === 'horizontal') {\n      if (x + ship.length > 10) {\n        throw new Error(\n          'Ship cannot be placed here, position is out of bounds'\n        );\n      }\n      for (let i = 0; i < ship.length; i++) {\n        if (this.board[y][x + i] !== null) {\n          throw new Error('Ship cannot be placed here, position is occupied');\n        }\n      }\n    } else {\n      if (y + ship.length > 10) {\n        throw new Error(\n          'Ship cannot be placed here, position is out of bounds'\n        );\n      }\n      for (let i = 0; i < ship.length; i++) {\n        if (this.board[y + i] && this.board[y + i][x] !== null) {\n          throw new Error('Ship cannot be placed here, position is occupied');\n        }\n      }\n    }\n\n    this.ships.push(ship);\n\n    if (orientation === 'horizontal') {\n      for (let i = 0; i < ship.length; i++) {\n        this.board[y][x + i] = ship;\n      }\n    } else {\n      for (let i = 0; i < ship.length; i++) {\n        this.board[y + i][x] = ship;\n      }\n    }\n  }\n  receiveAttack(x, y) {\n    const shipAffected = this.ships.find((ship) => {\n      const occupiedCells = ship.getOccupiedCells();\n      return occupiedCells.some(([cellX, cellY]) => cellX === x && cellY === y);\n    });\n    if (shipAffected) {\n      shipAffected.hit();\n      return true;\n    } else {\n      this.missedShots.push({ x, y });\n      return false;\n    }\n  }\n  shipsSunk() {\n    return this.ships.every((ship) => ship.hits >= ship.length);\n  }\n  getBoardState() {\n    return this.board.map((row) =>\n      row.map((ship) => (ship ? ship.name : null))\n    );\n  }\n}\n\nmodule.exports = Gameboard;\n","const Gameboard = require('./Gameboard');\n\nclass Player {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n    this.gameboard = new Gameboard();\n    this._turn = false;\n  }\n  setTurn(turn) {\n    this._turn = turn;\n  }\n  getTurn() {\n    return this._turn;\n  }\n  play() {\n    this.setTurn(!this.getTurn());\n  }\n  attack(opponent, x, y) {\n    if (this.getTurn()) {\n      const hit = opponent.gameboard.receiveAttack(x, y);\n      this.play();\n      opponent.play();\n      return { status: 'success', message: hit };\n    }\n    return { status: 'error', message: false };\n  }\n}\n\nmodule.exports = Player;\n","class Ship {\n  constructor(length, name) {\n    if (typeof length !== 'number' || length <= 0) {\n      throw new Error('Length must be a positive number');\n    }\n    this.length = length;\n    this.hits = 0;\n    this.position = null;\n    this.orientation = null;\n    this.name = name;\n  }\n  hit() {\n    this.hits++;\n  }\n  isSunk() {\n    return this.hits >= this.length;\n  }\n  setPosition(x, y, orientation) {\n    this.position = [x, y];\n    this.orientation = orientation;\n  }\n  getOccupiedCells() {\n    const cells = [];\n    const [x, y] = this.position;\n\n    for (let i = 0; i < this.length; i++) {\n      if (this.orientation === 'horizontal') {\n        cells.push([x + i, y]);\n      } else {\n        cells.push([x, y + i]);\n      }\n    }\n\n    return cells;\n  }\n}\n\nmodule.exports = Ship;\n","import Player from './Player';\nimport Ship from './Ship';\n\n// Initialize players\nexport const player1 = new Player('Player1', 'real');\nexport const player2 = new Player('Player2', 'real');\n\nconst isPlayer1Turn = Math.random() < 0.5;\nplayer1.setTurn(isPlayer1Turn);\nplayer2.setTurn(!isPlayer1Turn);\n\n// Define ship types and sizes\nconst shipTypes = [\n  { name: 'Carrier', size: 5 },\n  { name: 'Battleship', size: 4 },\n  { name: 'Destroyer', size: 3 },\n  { name: 'Submarine', size: 3 },\n  { name: 'Patrol Boat', size: 2 },\n];\n\nconst ships = shipTypes.map((type) => new Ship(type.size, type.name));\n\n// set ship positions\nfunction setShipPositions(player, ships) {\n  let placedShips = 0;\n  const ship = ships[placedShips];\n  while (placedShips < ships.length) {\n    let x, y, orientation;\n    x = Math.floor(Math.random() * (10 - ships[placedShips].length + 1));\n    y = Math.floor(Math.random() * 10);\n    orientation = Math.random() < 0.5 ? 'horizontal' : 'vertical';\n    try {\n      player.gameboard.placeShip(ships[placedShips], x, y, orientation);\n      placedShips++;\n    } catch (error) {\n      console.warn(`Retrying to place the ${ship.name}`);\n    }\n  }\n}\n\n// Set positions for player 1\nsetShipPositions(player1, ships);\n\n// Set positions for player 2\nsetShipPositions(player2, ships);\n","function displayBoard(boardState, container, turn, opponent) {\n  const cells = container.children;\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      const cell = cells[i * 10 + j];\n      const shipName = boardState[i][j];\n      if (turn) {\n        if (shipName) {\n          switch (shipName) {\n            case 'Carrier':\n              cell.classList.add('!bg-black');\n              break;\n            case 'Battleship':\n              cell.classList.add('!bg-red-600');\n              break;\n            case 'Destroyer':\n              cell.classList.add('!bg-orange-500');\n              break;\n            case 'Submarine':\n              cell.classList.add('!bg-green-500');\n              break;\n            case 'Patrol Boat':\n              cell.classList.add('!bg-violet-500');\n              break;\n          }\n        } else {\n          cell.classList.add('!bg-gray-200');\n        }\n      } else {\n        cell.classList.add('!bg-gray-200');\n      }\n    }\n  }\n}\nfunction welcome_setup(player) {\n  const game_container = document.getElementById('game-container');\n  const game_setup_container = document.getElementById('game-setup');\n  const startBtn = document.getElementById('startBtn');\n  const player1container = document.getElementById('player1-board');\n  const player2container = document.getElementById('player2-board');\n\n  startBtn.addEventListener('click', () => {\n    alert(`${player.name} is your turn Are you ready ?`);\n    game_setup_container.classList.add('hidden');\n    player1container.classList.remove('hidden');\n    player2container.classList.remove('hidden');\n  });\n}\n\nmodule.exports = {\n  displayBoard,\n  welcome_setup,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './styles.css';\nimport { player1, player2 } from './game';\nimport { displayBoard, welcome_setup } from './ui';\n\n// Get the game container element\nconst player1BoardContainer = document.getElementById('player1-board');\nconst player2BoardContainer = document.getElementById('player2-board');\n\nconst currentPlayer = player1.getTurn() ? player1 : player2;\nconst opponent = player1.getTurn() ? player2 : player1;\nconst boardContainer = player1.getTurn()\n  ? player1BoardContainer\n  : player2BoardContainer;\n\ndisplayBoard(\n  currentPlayer.gameboard.getBoardState(),\n  boardContainer,\n  currentPlayer.getTurn(),\n  opponent\n);\n\nwelcome_setup(currentPlayer);\n"],"names":[],"sourceRoot":""}